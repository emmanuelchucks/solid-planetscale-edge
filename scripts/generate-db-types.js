import fs from "fs/promises"
import path from "path"
import prettier from "prettier"

const modelRegex = /model ([A-Za-z]+)/g
const schemaFile = new URL("../prisma/schema.prisma", import.meta.url)
const typesDir = new URL("../src/types", import.meta.url)
const outputFile = path.join(typesDir.pathname, "db.ts")

try {
  // Read the schema file and find all models
  const data = await fs.readFile(schemaFile, "utf8")

  let match
  let models = ""

  while ((match = modelRegex.exec(data))) {
    models += `${match[1]}, `
  }

  if (!models) {
    throw new Error(`Could not find any models in ${schemaFile}.`)
  }

  await fs.mkdir(typesDir, { recursive: true })

  // Write the types to a file
  const output = `// DO NOT EDIT THIS FILE
import type { ${models.slice(0, -2)} } from "@prisma/client/edge"

export type Database = {
  ${models
    .slice(0, -2)
    .split(", ")
    .map((model) => `${model}: ${model}`)
    .join("\n  ")}
}`

  await fs.writeFile(
    outputFile,
    prettier.format(output, {
      parser: "typescript",
      semi: false,
    })
  )

  console.log(`Models from ${schemaFile} were added to ${outputFile}.`)
} catch (err) {
  console.error(err)
}
